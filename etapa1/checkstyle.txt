Starting audit...
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:6:22: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:6:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:8:22: Parameter name should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:11:5: Class 'AudioFile' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AudioFile' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:11:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/AudioFile.java:15:5: Class 'AudioFile' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AudioFile' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/UserInput.java:17:19: Variable 'player' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/UserInput.java:50:30: Parameter playlists should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/UserInput.java:58:31: Parameter likedSongs should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/UserInput.java:66:38: Parameter followedPlaylists should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/SongInput.java:5:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/PodcastInput.java:5:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/PodcastInput.java:45:32: Parameter lastEpisode should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/fileio/input/PodcastInput.java:53:32: Parameter watchedTime should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:3:8: Unused import - fileio.input.AudioFile. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:7:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:10:9: Class 'PlayPauseCommand' looks like designed for extension (can be subclassed), but the method 'buildMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPauseCommand' final or making the method 'buildMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:10:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:10:36: Parameter player should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:11:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:12:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:14:27: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:16:19: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/PlayPauseCommand.java:17: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:7:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:7:9: Class 'AddRemoveCommand' looks like designed for extension (can be subclassed), but the method 'getPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveCommand' final or making the method 'getPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:11:9: Class 'AddRemoveCommand' looks like designed for extension (can be subclassed), but the method 'setPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveCommand' final or making the method 'setPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:11:35: Parameter playlistId should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:20:9: Class 'AddRemoveCommand' looks like designed for extension (can be subclassed), but the method 'addRemoveMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveCommand' final or making the method 'addRemoveMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:20:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:20:40: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:22:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:23: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:26:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:30:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:34:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:41:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:41:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:42:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:42:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:44:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:46: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/AddRemoveCommand.java:50: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:3:8: Unused import - fileio.input.LibraryInput. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:13:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:18:9: Class 'ShuffleCommand' looks like designed for extension (can be subclassed), but the method 'getSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleCommand' final or making the method 'getSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:22:9: Class 'ShuffleCommand' looks like designed for extension (can be subclassed), but the method 'setSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleCommand' final or making the method 'setSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:22:29: Parameter seed should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:26:9: Class 'ShuffleCommand' looks like designed for extension (can be subclassed), but the method 'shufflePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleCommand' final or making the method 'shufflePlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:26:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:26:35: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:27:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:31:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:43:9: Class 'ShuffleCommand' looks like designed for extension (can be subclassed), but the method 'message' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleCommand' final or making the method 'message' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:43:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:43:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:45:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:49:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:53:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:53:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:55:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:61:9: Class 'ShuffleCommand' looks like designed for extension (can be subclassed), but the method 'shufflePlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShuffleCommand' final or making the method 'shufflePlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:61:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:61:53: Parameter playlist should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:66:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShuffleCommand.java:66:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:2:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:3:1: Redundant import from the same package - main.Filter. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:5:8: Unused import - java.time.format.SignStyle. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:12:40: Variable 'searchResults' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:15:5: Class 'SearchCommand' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchCommand' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:15:25: Parameter type should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:22:5: Class 'SearchCommand' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchCommand' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:22:28: Parameter filters should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:26:5: Class 'SearchCommand' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchCommand' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:30:5: Class 'SearchCommand' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchCommand' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:34:5: Class 'SearchCommand' looks like designed for extension (can be subclassed), but the method 'getSearchResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchCommand' final or making the method 'getSearchResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:34:50: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:34:72: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:39:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:40:26: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:48: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:52: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:56: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:60: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:64: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:69: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:71:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:73:30: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:78: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:84:29: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:90: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:94: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:100:30: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:103:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:104:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:106: Line is longer than 100 characters (found 146). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:110: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:119:36: '5' is a magic number. [MagicNumber]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SearchCommand.java:120:81: '5' is a magic number. [MagicNumber]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:5:8: Unused import - fileio.input.SongInput. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:8:26: Variable 'loadedItem' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:14:9: Class 'LoadCommand' looks like designed for extension (can be subclassed), but the method 'getResultMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoadCommand' final or making the method 'getResultMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:18:9: Class 'LoadCommand' looks like designed for extension (can be subclassed), but the method 'buildMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoadCommand' final or making the method 'buildMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:18:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:18:36: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:18:37: Parameter audiofile should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:20:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:22: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:22:62: Inner assignments should be avoided. [InnerAssignment]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:24:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:25:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:26: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:26:62: Inner assignments should be avoided. [InnerAssignment]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LoadCommand.java:29:19: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:8:9: Class 'RepeatCommand' looks like designed for extension (can be subclassed), but the method 'setRepeatMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RepeatCommand' final or making the method 'setRepeatMode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:8:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:8:35: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:19:9: Class 'RepeatCommand' looks like designed for extension (can be subclassed), but the method 'message' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RepeatCommand' final or making the method 'message' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:19:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:19:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:27: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:27:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:27:33: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:29:33: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:33: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:33:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:33:33: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/RepeatCommand.java:35:33: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:3:8: Unused import - com.fasterxml.jackson.databind.JsonNode. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:6:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:20:15: Variable 'user' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:22:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:22:18: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:23:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:23:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:24:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:37:13: Variable 'createdSearch' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:38:26: Variable 'searchCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:40:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:40:25: Parameter type should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:41:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:48:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:48:28: Parameter filters should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:49:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:58:13: Variable 'createdSelect' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:59:26: Variable 'selectCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:61:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:61:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:62:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:70:13: Variable 'createdLoad' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:71:24: Variable 'loadCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:74:13: Variable 'createdPlayPause' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:75:29: Variable 'playPauseCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:79:13: Variable 'createdStatus' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:80:26: Variable 'statusCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:84:13: Variable 'createdCreatePlaylist' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:85:34: Variable 'createPlaylistCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:87:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:87:33: Parameter playlistName should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:87:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:88:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:97:13: Variable 'createdAddRemove' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:98:29: Variable 'addRemoveCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:100:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:100:31: Parameter playlistId should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:101:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:108:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:109:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:118:13: Variable 'createdShowPreferred' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:119:38: Variable 'showPreferredSongsCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:122:13: Variable 'createdShowPlaylists' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:123:33: Variable 'showPlaylistsCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:126:13: Variable 'createdRepeat' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:127:26: Variable 'repeatCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:130:13: Variable 'createdShuffle' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:131:27: Variable 'shuffleCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:132:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:132:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:132:25: Parameter seed should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:133:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:141:13: Variable 'createdSwitchVisibility' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:142:36: Variable 'switchVisibilityCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:145:13: Variable 'createdFollow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:146:26: Variable 'followCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:150:13: Variable 'createdLikeCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:151:24: Variable 'likeCommand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:153:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'getCommandList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'getCommandList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:157:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:157:28: Parameter command should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:161:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:161:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:165:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:165:29: Parameter username should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:169:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:169:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:173:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'getTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'getTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:177:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:181:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'SearchExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'SearchExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:181:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:181:17: Name 'SearchExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:181:31: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:185:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:185:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:187:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:189:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:203: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:209:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'SelectExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'SelectExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:209:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:209:17: Name 'SelectExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:215:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:215:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:217:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:217:22: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:235:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'LoadExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'LoadExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:235:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:235:17: Name 'LoadExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:236:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:242:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:259:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'PlayPauseExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'PlayPauseExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:259:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:259:17: Name 'PlayPauseExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:267:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:267:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:269:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:271:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:297:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'StatusExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'StatusExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:297:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:297:17: Name 'StatusExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:298:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:303:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:303:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:305:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:307:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:324:59: '3' is a magic number. [MagicNumber]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:325:58: '4' is a magic number. [MagicNumber]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:334:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'CreatePlaylistExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'CreatePlaylistExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:334:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:334:17: Name 'CreatePlaylistExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:334:39: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:347:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'AddRemoveExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'AddRemoveExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:347:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:347:17: Name 'AddRemoveExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:360:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'LikeExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'LikeExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:360:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:360:17: Name 'LikeExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:361:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:377:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'ShowPreferredSongsExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'ShowPreferredSongsExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:377:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:377:17: Name 'ShowPreferredSongsExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:378:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:401:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'ShowPlaylistsExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'ShowPlaylistsExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:401:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:401:17: Name 'ShowPlaylistsExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:402:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:438:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'RepeatExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'RepeatExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:438:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:438:17: Name 'RepeatExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:439:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:445:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:445:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:448:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:448:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:450:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:450:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:452:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:452:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:468:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'ShuffleExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'ShuffleExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:468:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:468:17: Name 'ShuffleExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:475:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:475:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:477:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:477:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:479:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:479:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:489: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:503:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'SwitchVisibilityExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'SwitchVisibilityExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:503:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:503:17: Name 'SwitchVisibilityExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:503:41: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:517:5: Class 'InputCommands' looks like designed for extension (can be subclassed), but the method 'FollowExecute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputCommands' final or making the method 'FollowExecute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:517:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:517:17: Name 'FollowExecute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:518:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:527:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:527:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/InputCommands.java:527:64: '||' should be on a new line. [OperatorWrap]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:7:29: Variable 'selectedItem' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:9:5: Class 'SelectCommand' looks like designed for extension (can be subclassed), but the method 'getItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectCommand' final or making the method 'getItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:13:5: Class 'SelectCommand' looks like designed for extension (can be subclassed), but the method 'setItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectCommand' final or making the method 'setItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:13:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:18:5: Class 'SelectCommand' looks like designed for extension (can be subclassed), but the method 'getSelectedItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectCommand' final or making the method 'getSelectedItem' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:18:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:19: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:19:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SelectCommand.java:21:11: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:15:9: Class 'CreatePlaylistCommand' looks like designed for extension (can be subclassed), but the method 'getPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistCommand' final or making the method 'getPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:19:9: Class 'CreatePlaylistCommand' looks like designed for extension (can be subclassed), but the method 'setPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistCommand' final or making the method 'setPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:19:37: Parameter playlistName should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:23:9: Class 'CreatePlaylistCommand' looks like designed for extension (can be subclassed), but the method 'createPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistCommand' final or making the method 'createPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:23:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:23:39: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:23:55: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:25:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:25:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:26:25: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:26:25: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:27:33: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:45:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:46:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:46:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:52:9: Class 'CreatePlaylistCommand' looks like designed for extension (can be subclassed), but the method 'message' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylistCommand' final or making the method 'message' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:52:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:52:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:52:47: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:55:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:55:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/CreatePlaylistCommand.java:57:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:10:9: Class 'LikeCommand' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikeCommand' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:14:9: Class 'LikeCommand' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikeCommand' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:14:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:14:32: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:15:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:19:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:27:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:27:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:28:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:28:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/LikeCommand.java:31:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:4:8: Unused import - java.util.Objects. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:7:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:8:12: Variable 'album' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:9:23: Variable 'tags' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:10:12: Variable 'lyrics' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:11:12: Variable 'genre' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:12:12: Variable 'releaseYear' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:13:12: Variable 'artist' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:14:12: Variable 'owner' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:17:23: Variable 'fields' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:18:23: Variable 'filterArray' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:20:20: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:23:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:27:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:27:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:31:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:35:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:35:26: Parameter album should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:39:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:43:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:43:25: Parameter tags should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:47:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:51:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:51:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:55:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:59:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:59:26: Parameter genre should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:63:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:67:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:67:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:71:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:75:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:75:27: Parameter artist should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:79:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:83:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:83:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:87:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'buildFilterArray' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'buildFilterArray' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:88:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:92:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:96:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:100:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:104:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:108:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:112:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Filter.java:116:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPreferredSongsCommand.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPreferredSongsCommand.java:14:9: Class 'ShowPreferredSongsCommand' looks like designed for extension (can be subclassed), but the method 'getPreferredSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPreferredSongsCommand' final or making the method 'getPreferredSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPreferredSongsCommand.java:18:9: Class 'ShowPreferredSongsCommand' looks like designed for extension (can be subclassed), but the method 'setPreferredSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPreferredSongsCommand' final or making the method 'setPreferredSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPreferredSongsCommand.java:18:39: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:12:26: Variable 'songs' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:15:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:19:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:19:27: Parameter aPublic should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:26:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:26:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:30:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:34:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:38:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:42:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Playlist.java:42:30: Parameter followers should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:12:1: Duplicate import to line 5 - com.fasterxml.jackson.databind.ObjectMapper. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:13:8: Unused import - com.fasterxml.jackson.databind.node.JsonNodeFactory. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:15:1: Redundant import from the same package - main.InputCommands. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:16:1: Redundant import from the same package - main.SearchCommand. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:16:8: Unused import - main.SearchCommand. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:17:1: Redundant import from the same package - main.Playlist. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:17:8: Unused import - main.Playlist. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:18:1: Redundant import from the same package - main.SelectCommand. [RedundantImport]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:18:8: Unused import - main.SelectCommand. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:32:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:82: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:84: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:90:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:90:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:92: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:94:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:96:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Main.java:96:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:14:9: Class 'SwitchVisibilityCommand' looks like designed for extension (can be subclassed), but the method 'getPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchVisibilityCommand' final or making the method 'getPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:18:9: Class 'SwitchVisibilityCommand' looks like designed for extension (can be subclassed), but the method 'setPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchVisibilityCommand' final or making the method 'setPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:18:35: Parameter playlistId should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:22:9: Class 'SwitchVisibilityCommand' looks like designed for extension (can be subclassed), but the method 'switchVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchVisibilityCommand' final or making the method 'switchVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:22:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:22:38: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:22:54: Parameter library should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:23:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:27:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:30:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:30:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:30:53: '1400' is a magic number. [MagicNumber]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:34:25: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:35:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:35:33: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:38:17: '}' at column 3 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:44:25: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:45:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:45:33: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:51:9: Class 'SwitchVisibilityCommand' looks like designed for extension (can be subclassed), but the method 'message' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchVisibilityCommand' final or making the method 'message' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:51:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:51:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:52:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:55:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/SwitchVisibilityCommand.java:55:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:11:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:14:9: Class 'StatusCommand' looks like designed for extension (can be subclassed), but the method 'buildStatusArray' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StatusCommand' final or making the method 'buildStatusArray' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:14:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:14:51: Parameter player should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:17:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:17:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:19:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:30:40: Parameter player should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:32:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:32:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:34: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:34:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:34:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:36: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:36:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:36:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:38:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:38:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:40:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/StatusCommand.java:40:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPlaylistsCommand.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPlaylistsCommand.java:10:9: Class 'ShowPlaylistsCommand' looks like designed for extension (can be subclassed), but the method 'getPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylistsCommand' final or making the method 'getPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPlaylistsCommand.java:14:9: Class 'ShowPlaylistsCommand' looks like designed for extension (can be subclassed), but the method 'setPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylistsCommand' final or making the method 'setPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/ShowPlaylistsCommand.java:14:34: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:7:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:7:16: Variable 'message' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:12:9: Class 'FollowCommand' looks like designed for extension (can be subclassed), but the method 'followPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FollowCommand' final or making the method 'followPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:12:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:12:36: Parameter user should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:12:52: Parameter audioFile should be final. [FinalParameters]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:13:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:17:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:22:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:29:35: '--' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/FollowCommand.java:38:35: '++' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:8:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:12:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:12:13: Variable 'timestamp' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:13:19: Variable 'loadedItem' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:14:19: Variable 'playingNow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:15:13: Variable 'remainingTime' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:16:13: Variable 'listenedTime' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:17:13: Variable 'switchedTime' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:19:17: Variable 'paused' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:20:17: Variable 'shuffle' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:21:13: Variable 'repeatState' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:23:13: Variable 'repeatedOnce' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:25:37: Variable 'shuffledPlaylist' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:27: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:27:36: Variable 'playlists' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:29:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:32:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayingNow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayingNow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:32:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:33:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:42:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:51:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:53:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:56: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:67:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'initializePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'initializePlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:67:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:78:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:78:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:83: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:86: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:87: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:87:60: '.' is followed by whitespace. [NoWhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:103:33: 'while' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:104:41: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:105: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:106: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:114: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:115: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:116: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:117:41: '}' at column 6 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:119: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:128: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:129: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:130: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:135:34: 'while' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:136: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:137: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:137:42: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:145: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:146: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:147: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:153:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRemainingTimeRepeat2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRemainingTimeRepeat2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:153:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:158: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:161: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:162: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:162:60: '.' is followed by whitespace. [NoWhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:170:33: 'while' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:172: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:177: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:178: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:178:41: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:179: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:180:41: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:181: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:182: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:183: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:186:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:189: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:195:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRemainingTimeRepeat1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRemainingTimeRepeat1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:195:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:200: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:203: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:204: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:204:60: '.' is followed by whitespace. [NoWhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:212:33: 'while' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:215: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:233: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:234: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:235: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:237:49: '}' at column 7 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:238:49: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:239: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:240: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:241: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:243: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:244: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:254: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:255: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:256: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:260:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:264: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:265: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:266: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:268:59: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:269: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:270: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:271: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:273: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:274: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:283: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:284: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:285: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:289: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:291: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:293:59: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:294: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:295: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:296: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:298: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:308: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:309: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/kiki/Desktop/OOP_tema1/oop-project-2023/etapa1/./src/main/Player.java:310: Line is longer than 100 characters (found 126). [LineLength]
Audit done.
Checkstyle ends with 595 errors.
